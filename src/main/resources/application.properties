# Pin the Oracle DB version for Hibernate (tune generated SQL for that version)
quarkus.datasource.db-version=23
# Pin the Oracle DB version for dev mode
quarkus.datasource.devservices.image-name=docker.io/gvenzl/oracle-free:23-slim-faststart

# Disable Agroal's own connection pooling...
quarkus.datasource.jdbc.pooling-enabled=false
# ... and rely on UCP for connection pooling.
quarkus.datasource.jdbc.driver=oracle.ucp.jdbc.PoolDataSourceImpl
quarkus.datasource.jdbc.additional-jdbc-properties."ConnectionFactoryClassName"=oracle.jdbc.pool.OracleDataSource

# Pool size
# https://docs.oracle.com/en/database/oracle/oracle-database/23/jjucp/controlling-pool-size.html#GUID-80724EDA-5D83-46CF-B496-BB68F1F12628
# Similar to quarkus.datasource.jdbc.initial-size for Agroal
quarkus.datasource.jdbc.additional-jdbc-properties."InitialPoolSize"=5
# Similar to quarkus.datasource.jdbc.min-size for Agroal
quarkus.datasource.jdbc.additional-jdbc-properties."MinPoolSize"=2
# Similar to quarkus.datasource.jdbc.max-size for Agroal
quarkus.datasource.jdbc.additional-jdbc-properties."MaxPoolSize"=10
# Max size must be consistent between Agroal and UCP, otherwise Agroal may limit the number of concurrenct connections
quarkus.datasource.jdbc.max-size=${quarkus.datasource.jdbc.additional-jdbc-properties."MaxPoolSize"}

# Pool stale connection handling
# https://docs.oracle.com/en/database/oracle/oracle-database/23/jjucp/stale-ucp-connections.html#GUID-4958D16C-3209-48C7-94A8-4DEBFEA64D43
# Similar to quarkus.datasource.jdbc.max-lifetime for Agroal
quarkus.datasource.jdbc.additional-jdbc-properties."MaxConnectionReuseTime"=300
# Similar to quarkus.datasource.jdbc.background-validation-interval / quarkus.datasource.jdbc.foreground-validation-interval for Agroal
quarkus.datasource.jdbc.additional-jdbc-properties."ConnectionValidationTimeout"=300
# Similar to quarkus.datasource.jdbc.leak-detection-interval for Agroal, though Agroal will warn, not kill the connection
quarkus.datasource.jdbc.additional-jdbc-properties."TimeToLiveConnectionTimeout"=18000
# No equivalent in Agroal? Similar to the above, but based on idle time rather than total borrowal time.
quarkus.datasource.jdbc.additional-jdbc-properties."AbandonedConnectionTimeout"=10
# Similar to quarkus.datasource.jdbc.acquisition-timeout for Agroal
quarkus.datasource.jdbc.additional-jdbc-properties."ConnectionWaitTimeout"=10
# Similar to quarkus.datasource.jdbc.idle-removal-interval for Agroal
quarkus.datasource.jdbc.additional-jdbc-properties."InactiveConnectionTimeout"=60
# Configured separately for each check in Agroal (see above)
quarkus.datasource.jdbc.additional-jdbc-properties."TimeoutCheckInterval"=60

# Pool connection harvesting
# See https://docs.oracle.com/en/database/oracle/oracle-database/23/jjucp/harvesting-connections.html#GUID-1639B871-C332-4F30-8EE0-F753FF07BFB7
# This is essentially about keeping connections in an "application level" pool.
# No equivalent in Agroal, where applications are supposed to just request a connection when needed.

# SQL Statement Caching
# See https://docs.oracle.com/en/database/oracle/oracle-database/23/jjucp/caching-sql-statements.html#GUID-D3E63627-6FA4-455B-AC0F-C6CF538AA3D4
# No equivalent in Agroal, but drivers (e.g. the Oracle thin driver) may offer their own separate implementation.

# Move /q to management interface (port 9000) for prod endpoints (e.g. observability)
quarkus.management.enabled=true

# Observability (metrics)
# See https://quarkus.io/guides/datasource#datasource-metrics
# See https://quarkus.io/guides/telemetry-micrometer
quarkus.datasource.metrics.enabled=true